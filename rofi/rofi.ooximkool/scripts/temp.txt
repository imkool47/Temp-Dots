  # Show the Wi-Fi menu using the custom style
  chosen="$(printf "%b" "$menu_list" | rofi -dmenu -i -p "Wi-Fi Networks" \
    -no-custom -disable-history -no-fixed-num-lines \
    -theme-str 'configuration { show-icons: false; }
               window { location: north east; x-offset: -260; y-offset: 192; width: 225px; }
               listview { columns: 1; }
               element-text { vertical-align: 0.50; horizontal-align: 0.50; }
               inputbar { enabled: false; }
               mode-switcher { enabled: false; }')"



-----------------------------------------------------------------------------

#!/bin/bash

eth_interface=$(nmcli device status | awk '$2 == "ethernet" {print $1; exit}')
saved_connections=$(nmcli -g NAME connection)

# Function to build the Wi-Fi menu
build_wifi_menu() {
  nmcli device wifi rescan >/dev/null 2>&1

  wifi_menu_conn=""
  wifi_menu_saved=""
  wifi_menu_unsaved=""

  while IFS=: read -r in_use ssid signal security; do
    [ -z "$ssid" ] && continue
    ssid=$(echo "$ssid" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//') # trim

    connected=0
    [ "$in_use" = "*" ] && connected=1

    saved=0
    echo "$saved_connections" | grep -Fxq "$ssid" && saved=1

    idx=$((signal / 20))
    [ "$idx" -gt 4 ] && idx=4

    if [ "$connected" -eq 1 ]; then
      icons=("󰤯" "󰤟" "󰤢" "󰤥" "󰤨")
    elif [ "$saved" -eq 1 ]; then
      icons=("󱛏" "󱛋" "󱛌" "󱛍" "󱛎")
    else
      icons=("󰤬" "󰤡" "󰤤" "󰤧" "󰤪")
    fi
    icon="${icons[$idx]}"

    line="${icon}  ${ssid}"
    if [ "$connected" -eq 1 ]; then
      wifi_menu_conn+="  ${line}\n"
    elif [ "$saved" -eq 1 ]; then
      wifi_menu_saved+="${line}\n"
    else
      wifi_menu_unsaved+="${line}\n"
    fi
  done < <(nmcli -t -f IN-USE,SSID,SIGNAL,SECURITY device wifi list)

  wifi_menu="${wifi_menu_conn}${wifi_menu_saved}${wifi_menu_unsaved}"
}

# ---- Main ----
while true; do
  eth_toggle=""
  if [ -n "$eth_interface" ]; then
    eth_state=$(nmcli device status | awk -v iface="$eth_interface" '$1 == iface {print $3}')
    [ "$eth_state" = "connected" ] && eth_toggle="Disable Ethernet"
    [ "$eth_state" = "disconnected" ] && eth_toggle="Enable Ethernet"
  fi

  wifi_status=$(nmcli radio wifi)
  [ "$wifi_status" = "enabled" ] && wifi_toggle="Disable Wi-Fi" || wifi_toggle="Enable Wi-Fi"

  build_wifi_menu

  menu_list=""
  [ -n "$eth_toggle" ] && menu_list+="${eth_toggle}\n"
  menu_list+="${wifi_toggle}\n"
  menu_list+="${wifi_menu}"

  # Show the Wi-Fi menu using the custom style
  chosen="$(printf "%b" "$menu_list" | rofi -dmenu -i -p "Wi-Fi Networks" \
    -no-custom -disable-history -no-fixed-num-lines \
    -theme-str 'configuration { show-icons: false; }
               window { location: north east; x-offset: -260; y-offset: 192; width: 225px; }
               listview { columns: 1; }
               element-text { vertical-align: 0.50; horizontal-align: 0.50; }
               inputbar { enabled: false; }
               mode-switcher { enabled: false; }')"

  [ -z "$chosen" ] && break

  case "$chosen" in
    "Disable Ethernet") nmcli device disconnect "$eth_interface" && break ;;
    "Enable Ethernet")  nmcli device connect "$eth_interface" && break ;;
    "Disable Wi-Fi")    nmcli radio wifi off && break ;;
    "Enable Wi-Fi")
      nmcli radio wifi on
      notify-send -t 3000 "Wi-Fi Enabled" "Refreshing network list..."
      sleep 3
      continue
      ;;
    *)
      ssid=$(echo "$chosen" | sed -E 's/^[^ ]+  //' | sed 's/^ //')
      if echo "$saved_connections" | grep -Fxq "$ssid"; then
        nmcli connection up id "$ssid" &&
          notify-send "Connected to $ssid"
      else
        sec=$(nmcli -t -f SSID,SECURITY device wifi list | grep -F "$ssid" | cut -d: -f2 | head -n1)
        if [ "$sec" != "--" ]; then
          # Request password for new Wi-Fi connection
          pass=$(rofi -dmenu -p "Enter Wi-Fi Password" -password \
            -theme-str 'configuration { show-icons: false; }
                       window { location: north east; x-offset: -260; y-offset: 500; width: 300px; }
                       listview { columns: 1; }
                       element-text { vertical-align: 0.50; horizontal-align: 0.50; }
                       inputbar { enabled: true; children: [prompt]; }
                       mode-switcher { enabled: false; }
                       window { border: 2px; border-color: red; }')

          nmcli device wifi connect "$ssid" password "$pass" &&
            notify-send "Connected to $ssid"
        else
          nmcli device wifi connect "$ssid" &&
            notify-send "Connected to $ssid"
        fi
      fi
      break
      ;;
  esac
done

exit 0
